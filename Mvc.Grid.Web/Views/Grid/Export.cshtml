@model IGrid<Person>

@{
    ViewBag.Title = "MVC.Grid data page export";
}

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Exporting grid page data</span>
        <div class="widget-buttons">
            <a class="fa fa-file-excel-o" href="@(Url.Action("GetExport") + ViewContext.HttpContext.Request.QueryString)"></a>
            <span class="fa fa-minus content-toggle"></span>
        </div>
    </div>
    <div class="widget-content">
        @(new HtmlGrid<Person>(Html, Model))
    </div>
</div>

<div class="row">
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Controller</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
    <code>
[<span class="cls">HttpGet</span>]
<span class="kwd">public</span> <span class="cls">ViewResult</span> Index()
{
    <span class="kwd">return</span> View(CreateExportableGrid());
}

[<span class="cls">HttpGet</span>]
<span class="kwd">public</span> <span class="cls">ViewResult</span> ExportIndex()
{
    <span class="com">// Using EPPlus from nuget</span>
    <span class="kwd">using</span> (<span class="cls">ExcelPackage</span> package = new <span class="cls">ExcelPackage</span>())
    {
        <span class="cls">Int32</span> row = 2;
        <span class="cls">Int32</span> col = 1;

        package.Workbook.Worksheets.Add(<span class="str">"Data"</span>);
        <span class="cls">IGrid</span>&lt;<span class="cls">Person</span>&gt; grid = CreateExportableGrid();
        <span class="cls">ExcelWorksheet</span> sheet = package.Workbook.Worksheets[<span class="str">"Data"</span>];

        <span class="kwd">foreach</span> (<span class="cls">IGridColumn</span> column <span class="kwd">in</span> grid.Columns)
        {
            sheet.Cells[1, col].Value = column.Title;
            sheet.Column(col++).Width = 18;
        }

        <span class="kwd">foreach</span> (<span class="cls">IGridRow&lt;Person&gt;</span> gridRow <span class="kwd">in</span> grid.Rows)
        {
            col = 1;
            <span class="kwd">foreach</span> (<span class="cls">IGridColumn</span> column <span class="kwd">in</span> grid.Columns)
                sheet.Cells[row, col++].Value = column.ValueFor(gridRow);

            row++;
        }

        <span class="kwd">return</span> File(package.GetAsByteArray(), <span class="str">"application/unknown"</span>);
    }
}

<span class="kwd">private</span> <span class="cls">IGrid</span>&lt;<span class="cls">Person</span>&gt; CreateExportableGrid()
{
    <span class="cls">IGrid</span>&lt;<span class="cls">Person</span>&gt; grid = <span class="kwd">new</span> <span class="cls">Grid</span>&lt;<span class="cls">Person</span>&gt;(<span class="cls">PeopleRepository</span>.GetPeople());
    grid.ViewContext = new ViewContext { HttpContext = HttpContext };
    grid.Query = Request.Query;

    grid.Columns.Add(model => model.Name).Titled(<span class="str">"Name"</span>);
    grid.Columns.Add(model => model.Surname).Titled(<span class="str">"Surname"</span>);

    grid.Columns.Add(model => model.Age).Titled(<span class="str">"Age"</span>);
    grid.Columns.Add(model => model.Birthday).Titled(<span class="str">"Birth date"</span>).Formatted(<span class="str">"{0:d}"</span>);
    grid.Columns.Add(model => model.IsWorking).Titled(<span class="str">"Employed"</span>);

    grid.Pager = <span class="kwd">new</span> <span class="cls">GridPager</span>&lt;<span class="cls">Person</span>&gt;(grid);
    grid.Processors.Add(grid.Pager);
    grid.Pager.RowsPerPage = 6;

    <span class="kwd">foreach</span> (<span class="cls">IGridColumn</span> column <span class="kwd">in</span> grid.Columns)
    {
        column.Filter.IsEnabled = <span class="kwd">true</span>;
        column.Sort.IsEnabled = <span class="kwd">true</span>;
    }

    <span class="kwd">return</span> grid;
}
</code>
</pre>
        </div>
    </div>
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>View</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
<code>
@@model <span class="cls">IGrid</span>&lt;<span class="cls">Person</span>&gt;

&lt;a href="@@(Url.Action(<span class="str">"ExportIndex"</span>) + ViewContext.HttpContext.Request.QueryString)"&gt;Export&lt;/a&gt;

@@(<span class="kwd">new</span> <span class="cls">HtmlGrid</span>&lt;<span class="cls">Person</span>&gt;(Html, Model))
</code>
</pre>
        </div>
    </div>
</div>
