@model IEnumerable<Person>

@{
    ViewBag.Title = "MVC.Grid filter modes";
}

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Grid filter row filter mode</span>
        <div class="widget-buttons">
            <span class="fa fa-minus content-toggle"></span>
        </div>
    </div>
    <div class="widget-content">
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Name).Titled("Name");
                columns.Add(model => model.Surname).Titled("Surname");
                columns.Add(model => model.MaritalStatus).Titled("Marital status");

                columns.Add(model => model.Age).Titled("Age");
                columns.Add(model => model.Birthday).Titled("Birth date").Formatted("{0:d}");
                columns.Add(model => model.IsWorking).Titled("Employed");
            })
            .WithFilterMode(GridFilterMode.FilterRow)
            .Empty("No data found")
            .Filterable()
            .Sortable()
        )
    </div>
</div>

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Grid excel row filter mode</span>
        <div class="widget-buttons">
            <span class="fa fa-minus content-toggle"></span>
        </div>
    </div>
    <div class="widget-content">
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Name).Titled("Name");
                columns.Add(model => model.Surname).Titled("Surname");
                columns.Add(model => model.MaritalStatus).Titled("Marital status");

                columns.Add(model => model.Age).Titled("Age");
                columns.Add(model => model.Birthday).Titled("Birth date").Formatted("{0:d}");
                columns.Add(model => model.IsWorking).Titled("Employed");
            })
            .WithFilterMode(GridFilterMode.ExcelRow)
            .Empty("No data found")
            .Filterable()
            .Sortable()
        )
    </div>
</div>

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Grid header row filter mode</span>
        <div class="widget-buttons">
            <span class="fa fa-minus content-toggle"></span>
        </div>
    </div>
    <div class="widget-content">
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Name).Titled("Name");
                columns.Add(model => model.Surname).Titled("Surname");
                columns.Add(model => model.MaritalStatus).Titled("Marital status");

                columns.Add(model => model.Age).Titled("Age");
                columns.Add(model => model.Birthday).Titled("Birth date").Formatted("{0:d}");
                columns.Add(model => model.IsWorking).Titled("Employed");
            })
            .WithFilterMode(GridFilterMode.HeaderRow)
            .Empty("No data found")
            .Filterable()
            .Sortable()
        )
    </div>
</div>

<div class="row">
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Filter row view</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
<code>
@@model <span class="cls">IEnumerable</span>&lt;<span class="cls">Person</span>&gt;

@@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name);
        columns.Add(model => model.Surname);
        columns.Add(model => model.MaritalStatus);

        columns.Add(model => model.Age);
        columns.Add(model => model.Birthday).Formatted(<span class="str">"{0:d}"</span>);
        columns.Add(model => model.IsWorking);
    })
    .WithFilterMode(<span class="cls">GridFilterMode</span>.FilterRow)
    .Empty(<span class="str">"No data found"</span>)
    .Filterable()
    .Sortable()
)
</code>
</pre>
        </div>
    </div>
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Excel row view</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
<code>
@@model <span class="cls">IEnumerable</span>&lt;<span class="cls">Person</span>&gt;

@@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name);
        columns.Add(model => model.Surname);
        columns.Add(model => model.MaritalStatus);

        columns.Add(model => model.Age);
        columns.Add(model => model.Birthday).Formatted(<span class="str">"{0:d}"</span>);
        columns.Add(model => model.IsWorking);
    })
    .WithFilterMode(<span class="cls">GridFilterMode</span>.ExcelRow)
    .Empty(<span class="str">"No data found"</span>)
    .Filterable()
    .Sortable()
)
</code>
</pre>
        </div>
    </div>
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Header row view</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
<code>
@@model <span class="cls">IEnumerable</span>&lt;<span class="cls">Person</span>&gt;

@@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name);
        columns.Add(model => model.Surname);
        columns.Add(model => model.MaritalStatus);

        columns.Add(model => model.Age);
        columns.Add(model => model.Birthday).Formatted(<span class="str">"{0:d}"</span>);
        columns.Add(model => model.IsWorking);
    })
    .WithFilterMode(<span class="cls">GridFilterMode</span>.HeaderRow)
    .Empty(<span class="str">"No data found"</span>)
    .Filterable()
    .Sortable()
)
</code>
</pre>
        </div>
    </div>
</div>
