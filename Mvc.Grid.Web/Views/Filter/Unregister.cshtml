@model IQueryable<Person>

@{
    ViewBag.Title = "MVC.Grid filter unregistration";
}

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Unregistering a filter</span>
    </div>
    <div class="widget-content">
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Name);
                columns.Add(model => model.Surname);
                columns.Add(model => model.MaritalStatus);

                columns.Add(model => model.IsWorking);
            })
            .Empty("No data found")
            .Filterable()
        )
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="widget code">
            <div class="widget-header">
                <div class="fa fa-code"></div>
                <span>Startup</span>
            </div>
            <div class="widget-content">
<pre>
<code>
<span class="cls">MvcGrid</span>.Filters.Unregister(<span class="kwd">typeof</span>(<span class="cls">String</span>), <span class="str">"starts-with"</span>)
<span class="cls">MvcGrid</span>.Filters.Unregister(<span class="kwd">typeof</span>(<span class="cls">String</span>), <span class="str">"ends-with"</span>)
</code>
</pre>
            </div>
        </div>
        <div class="widget code">
            <div class="widget-header">
                <div class="fa fa-code"></div>
                <span>View</span>
            </div>
            <div class="widget-content">
<pre>
<code>
@@model <span class="cls">IQueryable</span>&lt;<span class="cls">Person</span>&gt;

@@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.Name).Titled(<span class="str">"Name"</span>);
        columns.Add(model => model.Surname).Titled(<span class="str">"Surname"</span>);
        columns.Add(model => model.MaritalStatus).Titled(<span class="str">"Marital status"</span>);

        columns.Add(model => model.IsWorking).Titled(<span class="str">"Employed"</span>);
    })
    .Empty(<span class="str">"No data found"</span>)
    .Filterable()
)
</code>
</pre>
            </div>
        </div>
    </div>
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Javascript</span>
        </div>
        <div class="widget-content">
<pre>
<code>
<span class="kwd">var</span> CustomTextFilter = (<span class="kwd">function</span> (base) {
    MvcGridExtends(CustomTextFilter, base);

    <span class="kwd">function</span> CustomTextFilter(column) {
        base.call(<span class="kwd">this</span>, column);

        <span class="kwd">this</span>.methods = [<span class="str">'contains'</span>, <span class="str">'equals'</span>, <span class="str">'not-equals'</span>];
    }

    <span class="kwd">return</span> CustomTextFilter;
})(MvcGridTextFilter);

<span class="kwd">new</span> <span class="cls">MvcGrid</span>(document.querySelector(<span class="str">'.mvc-grid'</span>), {
    filters: {
        <span class="str">'text'</span>: CustomTextFilter
    }
});
</code>
</pre>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var CustomTextFilter = (function (base) {
            MvcGridExtends(CustomTextFilter, base);

            function CustomTextFilter(column) {
                base.call(this, column);

                this.methods = ['contains', 'equals', 'not-equals'];
            }

            return CustomTextFilter;
        })(MvcGridTextFilter);

        new MvcGrid(document.querySelector('.mvc-grid'), {
            filters: {
                'text': CustomTextFilter
            }
        });
    </script>
}
