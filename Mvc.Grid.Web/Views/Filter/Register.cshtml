@model IEnumerable<Person>

@{
    ViewBag.Title = "MVC.Grid custom filter registration";
}

<div class="widget example">
    <div class="widget-header">
        <div class="fa fa-bars"></div>
        <span>Registering a custom filter</span>
        <div class="widget-buttons">
            <span class="fa fa-minus content-toggle"></span>
        </div>
    </div>
    <div class="widget-content">
        @(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.Name).Titled("Name");
                columns.Add(model => model.Surname).Titled("Surname");
                columns.Add(model => model.MaritalStatus).Titled("Marital status");

                columns.Add(model => model.Age).Titled("Age");
                columns.Add(model => model.IsWorking).Titled("Employed");
            })
            .Empty("No data found")
            .Filterable()
        )
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="widget code">
            <div class="widget-header">
                <div class="fa fa-code"></div>
                <span>Startup</span>
                <div class="widget-buttons">
                    <span class="fa fa-minus content-toggle"></span>
                </div>
            </div>
            <div class="widget-content">
<pre>
<code>
<span class="cls">MvcGrid</span>.Filters.Register(<span class="kwd">typeof</span>(<span class="cls">Int32</span>), <span class="str">"contains"</span>, <span class="kwd">typeof</span>(<span class="cls">NumberContainsFilter</span>))
</code>
</pre>
            </div>
        </div>
        <div class="widget code">
            <div class="widget-header">
                <div class="fa fa-code"></div>
                <span>Filter</span>
                <div class="widget-buttons">
                    <span class="fa fa-minus content-toggle"></span>
                </div>
            </div>
            <div class="widget-content">
<pre>
<code>
<span class="kwd">public class</span> <span class="cls">NumberContainsFilter</span> : <span class="cls">BaseGridFilter</span>
{
    <span class="kwd">public override</span> <span class="cls">Expression</span> Apply(<span class="cls">Expression</span> expression)
    {
        <span class="kwd">if</span> (<span class="cls">String</span>.IsNullOrEmpty(Value))
            <span class="kwd">return null</span>;

        <span class="cls">MethodInfo</span> toStringMethod = <span class="kwd">typeof</span>(<span class="cls">Int32</span>).GetMethod(<span class="str">"ToString"</span>, <span class="kwd">new</span> <span class="cls">Type</span>[0]);
        <span class="cls">MethodInfo</span> containsMethod = <span class="kwd">typeof</span>(<span class="cls">String</span>).GetMethod(<span class="str">"Contains"</span>);

        <span class="cls">Expression</span> toString = <span class="cls">Expression</span>.Call(expression, toStringMethod);
        <span class="cls">Expression</span> value = <span class="cls">Expression</span>.Constant(Value.ToUpper());

        <span class="kwd">return</span> <span class="cls">Expression</span>.Call(toString, containsMethod, value);
    }
}
</code>
</pre>
            </div>
        </div>
    </div>
    <div class="widget code col">
        <div class="widget-header">
            <div class="fa fa-code"></div>
            <span>Javascript</span>
            <div class="widget-buttons">
                <span class="fa fa-minus content-toggle"></span>
            </div>
        </div>
        <div class="widget-content">
<pre>
<code>
<span class="kwd">var</span> ExtendedNumberFilter = (<span class="kwd">function</span> (base) {
    MvcGridExtends(ExtendedNumberFilter, base);

    <span class="kwd">function</span> ExtendedNumberFilter() {
        base.apply(<span class="kwd">this</span>);

        <span class="kwd">this</span>.methods.unshift(<span class="str">'contains'</span>);
    }

    <span class="kwd">return</span> ExtendedNumberFilter;
})(MvcGridNumberFilter);

$(<span class="str">'.mvc-grid'</span>).mvcgrid({
    filters: {
        <span class="str">'number'</span>: <span class="kwd">new</span> ExtendedNumberFilter()
    }
});

$.fn.mvcgrid.lang.number.contains = <span class="str">'Contains'</span>;
</code>
</pre>
        </div>
    </div>
</div>

@section scripts {
    <script>
        var ExtendedNumberFilter = (function (base) {
            MvcGridExtends(ExtendedNumberFilter, base);

            function ExtendedNumberFilter() {
                base.apply(this);

                this.methods.unshift('contains');
            }

            return ExtendedNumberFilter;
        })(MvcGridNumberFilter);

        $('.mvc-grid').mvcgrid({
            filters: {
                'number': new ExtendedNumberFilter()
            }
        });

        $.fn.mvcgrid.lang.number.contains = 'Contains';
    </script>
}
